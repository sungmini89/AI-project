# AI 감정 분석 일기장 웹사이트 PRD

## 프로젝트 개요
React + TypeScript + Tailwind CSS로 제작하는 AI 감정 분석 기능을 갖춘 일기장 웹 애플리케이션

## 핵심 기능 요구사항

### 1. 일기 작성 기능
- Tiptap 기반 리치 텍스트 에디터 구현
- 실시간 감정 분석 표시
- 자동 저장 기능
- 날짜별 일기 관리

### 2. 감정 분석 시스템
- Sentiment.js를 통한 영어 텍스트 감정 분석
- 한국어 감정 키워드 사전 기반 분석
- 긍정/부정/중립 점수 산출
- 이모지 기반 감정 표현 매핑

### 3. 데이터 시각화
- Chart.js 기반 월별/주별 감정 트렌드 차트
- React Calendar를 활용한 감정 히트맵 캘린더
- 워드 클라우드 생성 (로컬)
- 감정별 통계 대시보드

### 4. 데이터 관리
- IndexedDB를 통한 로컬 저장소
- 일기 CRUD 작업
- 백업/복원 기능
- 검색 기능

### 5. UI/UX 구성
- 반응형 디자인 (모바일/태블릿/데스크톱)
- 다크/라이트 테마 지원
- 직관적인 네비게이션
- 접근성 고려

### 6. 기술적 요구사항
- Vite 기반 빌드 시스템
- 환경변수 관리 (.env.example 포함)
- PWA 지원
- TypeScript 엄격 모드
- ESLint/Prettier 설정

### 7. 배포 및 호스팅
- Vercel 배포 설정
- 정적 사이트 생성
- CDN 최적화

## 감정 분석 구현 세부사항

### 영어 텍스트 분석
```javascript
const emotionKeywords = {
  happy: ['joy', 'excited', 'wonderful', 'amazing'],
  sad: ['disappointed', 'upset', 'depressed', 'lonely'],
  angry: ['frustrated', 'annoyed', 'mad', 'furious'],
  neutral: ['okay', 'fine', 'normal', 'usual']
};
```

### 한국어 텍스트 분석
```javascript
const koreanEmotionKeywords = {
  happy: ['행복', '기쁨', '즐거움', '신남', '좋음'],
  sad: ['슬픔', '우울', '외로움', '실망'],
  angry: ['화남', '짜증', '분노', '열받음'],
  neutral: ['그냥', '보통', '평범', '무난']
};
```

### 이모지 매핑
```javascript
const emotionEmojis = {
  happy: '😊',
  sad: '😢', 
  angry: '😠',
  excited: '🎉',
  calm: '😌',
  neutral: '😐'
};
```

## API 서비스 구성

### 서비스 모드
- `mock`: 개발용 더미 데이터
- `free`: 무료 API 제한적 사용
- `offline`: 로컬 처리만
- `custom`: 사용자 API 키 사용

### 환경변수 설정
```
VITE_USE_MOCK_DATA=true
VITE_HUGGINGFACE_TOKEN=optional
VITE_GEMINI_API_KEY=optional
VITE_API_MODE=offline
```

## 페이지 구성

### 1. 메인 대시보드
- 오늘의 감정 상태 요약
- 최근 일기 목록
- 감정 트렌드 미리보기

### 2. 일기 작성 페이지
- Tiptap 에디터
- 실시간 감정 분석 표시
- 저장/수정 기능

### 3. 일기 목록 페이지
- 타임라인 형식 표시
- 감정별 필터링
- 검색 기능

### 4. 분석 대시보드
- 감정 트렌드 차트
- 감정 히트맵 캘린더
- 워드 클라우드
- 통계 정보

### 5. 월간 리포트
- 월별 감정 분석 요약
- 개선점 제안
- 감정 패턴 분석

## 성능 최적화

### 프론트엔드 최적화
- React.memo를 통한 불필요한 리렌더링 방지
- 지연 로딩 (Lazy Loading)
- 코드 스플리팅
- 이미지 최적화

### 데이터 처리 최적화
- IndexedDB 인덱싱
- 백그라운드 처리
- 캐싱 전략

## 보안 및 개인정보 보호

### 데이터 보안
- 로컬 저장만 사용 (외부 전송 없음)
- 민감 정보 암호화
- 사용자 개인정보 최소화

### API 키 보안
- 환경변수 관리
- 클라이언트 사이드 보안
- 레이트 리미팅

## 접근성 및 국제화

### 접근성
- ARIA 라벨 적용
- 키보드 네비게이션 지원
- 스크린 리더 호환

### 다국어 지원
- 기본 한국어 지원
- 영어 인터페이스 옵션
- RTL 언어 고려