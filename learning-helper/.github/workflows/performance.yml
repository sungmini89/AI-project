name: Performance Monitoring

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1' # 매주 월요일 오전 6시

jobs:
  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build app
        run: npm run build
        
      - name: Serve built app
        run: |
          npm install -g http-server
          http-server dist -p 8080 -s &
          sleep 5
          
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun --upload.target=temporary-public-storage
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-results
          path: .lighthouseci/
          retention-days: 30
          
  bundle-analyzer:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build and analyze bundle
        run: |
          npm run build
          npx vite-bundle-analyzer dist
          
      - name: Check bundle size
        run: |
          npm install -g bundlesize
          bundlesize
          
  accessibility:
    name: Accessibility Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build app
        run: npm run build
        
      - name: Serve built app
        run: |
          npm install -g http-server
          http-server dist -p 8080 -s &
          sleep 5
          
      - name: Run axe accessibility tests
        run: |
          npm install -g @axe-core/cli
          axe http://localhost:8080 --save axe-results.json
          
      - name: Upload accessibility results
        uses: actions/upload-artifact@v3
        with:
          name: axe-results
          path: axe-results.json
          retention-days: 30