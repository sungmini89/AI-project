{
  "metadata": {
    "version": "1.0.0",
    "created": "2025-01-26",
    "lastModified": "2025-01-26",
    "totalTasks": 12,
    "completedTasks": 0
  },
  "tags": {
    "master": {
      "name": "master", 
      "description": "AI Study Helper development tasks",
      "isActive": true,
      "tasks": {
        "1": {
          "id": "1",
          "title": "프로젝트 기반 설정 및 Vite 환경 구축",
          "description": "React + TypeScript + Tailwind CSS + Vite 개발 환경 설정",
          "status": "pending",
          "priority": "high",
          "dependencies": [],
          "details": "Vite 프로젝트 생성, TypeScript 설정, Tailwind CSS 구성, ESLint/Prettier, package.json 의존성 설치. shadcn/ui 초기 설정과 components.json 구성 포함.",
          "testStrategy": "개발 서버 실행 확인, TypeScript 컴파일 테스트, 기본 컴포넌트 렌더링 확인",
          "estimatedHours": 6,
          "tags": ["setup", "vite", "typescript"],
          "subtasks": []
        },
        "2": {
          "id": "2", 
          "title": "shadcn/ui 컴포넌트 라이브러리 설정",
          "description": "교육용 UI 컴포넌트 설치 및 테마 구성",
          "status": "pending",
          "priority": "high", 
          "dependencies": ["1"],
          "details": "shadcn/ui 초기화, Button/Input/Card/Progress/Tabs/Dialog/Alert 컴포넌트 설치. 학습용 색상 테마 구성 (Learning blue, Achievement green).",
          "testStrategy": "각 컴포넌트 렌더링 테스트, 테마 색상 적용 확인, 반응형 동작 검증",
          "estimatedHours": 4,
          "tags": ["ui", "shadcn", "theme"],
          "subtasks": []
        },
        "3": {
          "id": "3",
          "title": "Magic UI 학습 애니메이션 구현", 
          "description": "학습 진도 애니메이션 및 인터랙티브 컴포넌트",
          "status": "pending",
          "priority": "medium",
          "dependencies": ["2"],
          "details": "StudyProgressRing, FlashcardFlip, QuizFeedback, StreakCounter, LearningChart 컴포넌트 구현. 60fps 애니메이션, 배터리 효율성, reduced motion 지원.",
          "testStrategy": "애니메이션 성능 테스트, 접근성 설정 확인, 다양한 디바이스 검증",
          "estimatedHours": 8,
          "tags": ["animation", "magicui", "performance"],
          "subtasks": []
        },
        "4": {
          "id": "4",
          "title": "텍스트 처리 엔진 구축",
          "description": "node-summarizer와 keyword-extractor 통합",
          "status": "pending", 
          "priority": "high",
          "dependencies": ["1"],
          "details": "node-summarizer 기반 오프라인 요약, keyword-extractor로 키워드 추출, PDF.js PDF 파싱, Web Workers 백그라운드 처리. 한국어 텍스트 최적화 포함.",
          "testStrategy": "대용량 텍스트 처리 성능 테스트, 한국어 처리 정확성 검증, 메모리 사용량 확인",
          "estimatedHours": 12,
          "tags": ["textprocessing", "offline", "performance"],
          "subtasks": []
        },
        "5": {
          "id": "5",
          "title": "파일 업로드 및 처리 컴포넌트",
          "description": "드래그앤드롭 업로드와 실시간 처리 상태 표시",
          "status": "pending",
          "priority": "high", 
          "dependencies": ["2", "4"],
          "details": "shadcn/ui 기반 드래그앤드롭 인터페이스, 파일 검증(10MB 제한), PDF/텍스트 파싱, Magic UI 진행률 애니메이션, 에러 처리 및 재시도.",
          "testStrategy": "다양한 파일 형식 업로드 테스트, 대용량 파일 처리 확인, 에러 시나리오 검증",
          "estimatedHours": 10,
          "tags": ["upload", "ui", "fileprocessing"],
          "subtasks": []
        },
        "6": {
          "id": "6",
          "title": "플래시카드 자동 생성 알고리즘",
          "description": "규칙 기반 Q&A 패턴 매칭으로 플래시카드 생성",
          "status": "pending",
          "priority": "high",
          "dependencies": ["4"],
          "details": "한국어 Q&A 패턴 매칭 (정의형, 원인-결과형, 방법형, 특징형), 문장 중요도 계산, 품질 필터링, 중복 제거. 플래시카드 데이터 구조 설계.",
          "testStrategy": "다양한 텍스트로 플래시카드 생성 테스트, 한국어 패턴 정확성 검증, 품질 평가",
          "estimatedHours": 14,
          "tags": ["algorithm", "flashcard", "korean"],
          "subtasks": []
        },
        "7": {
          "id": "7",
          "title": "spaced-repetition 학습 시스템",
          "description": "SM-2 알고리즘 기반 복습 스케줄링 구현",
          "status": "pending",
          "priority": "high",
          "dependencies": ["6"],
          "details": "SM-2 알고리즘 구현, 난이도 평가에 따른 간격 조정, 학습 세션 관리, 일일 목표 설정, IndexedDB 기반 진도 저장. 복습 큐 최적화.",
          "testStrategy": "스케줄링 로직 정확성 검증, 다양한 성능 시나리오 테스트, 데이터 지속성 확인",
          "estimatedHours": 12,
          "tags": ["spaced-repetition", "algorithm", "storage"],
          "subtasks": []
        },
        "8": {
          "id": "8", 
          "title": "플래시카드 학습 인터페이스",
          "description": "카드 뷰어 및 학습 세션 UI 구현",
          "status": "pending",
          "priority": "medium",
          "dependencies": ["3", "7"],
          "details": "shadcn/ui Card 기반 플래시카드 레이아웃, Magic UI 플립 애니메이션, 난이도 평가 버튼, 키보드 단축키 지원, 학습 진도 시각화, 세션 통계 표시.",
          "testStrategy": "사용자 인터랙션 테스트, 애니메이션 성능 확인, 키보드 접근성 검증",
          "estimatedHours": 8,
          "tags": ["ui", "flashcard", "interaction"],
          "subtasks": []
        },
        "9": {
          "id": "9",
          "title": "퀴즈 생성 및 실행 시스템",
          "description": "템플릿 기반 퀴즈 생성과 다양한 문제 유형 지원",
          "status": "pending",
          "priority": "medium",
          "dependencies": ["6"],
          "details": "객관식/주관식/참거짓/빈칸채우기 템플릿, 키워드 기반 선택지 생성, 퀴즈 설정 (난이도/개수/시간제한), Magic UI 타이머, 결과 분석 및 약점 식별.",
          "testStrategy": "다양한 문제 유형 생성 테스트, 채점 정확성 검증, 사용자 경험 평가",
          "estimatedHours": 10,
          "tags": ["quiz", "generation", "ui"],
          "subtasks": []
        },
        "10": {
          "id": "10",
          "title": "Google Gemini API 통합 및 할당량 관리",
          "description": "선택적 API 통합과 오프라인 폴백 구현",
          "status": "pending",
          "priority": "medium",
          "dependencies": ["4"],
          "details": "AIServiceConfig 인터페이스 구현, Gemini API 연동, 일 60 요청 할당량 추적 (localStorage), 할당량 초과 시 오프라인 모드 자동 전환, 에러 처리 및 재시도 로직.",
          "testStrategy": "API 연동 테스트, 할당량 관리 로직 검증, 폴백 메커니즘 확인",
          "estimatedHours": 8,
          "tags": ["api", "gemini", "quota"],
          "subtasks": []
        },
        "11": {
          "id": "11",
          "title": "학습 진도 추적 및 분석 대시보드",
          "description": "학습 통계 시각화 및 진도 분석 기능",
          "status": "pending", 
          "priority": "medium",
          "dependencies": ["7", "8", "9"],
          "details": "일/주/월별 학습 패턴 차트, 마스터된 카드 통계, 정답률 분석, 스트릭 표시, Magic UI 성취 애니메이션, 약점 영역 식별, 개인화된 학습 제안.",
          "testStrategy": "차트 렌더링 성능 테스트, 데이터 정확성 검증, 다양한 학습 패턴 시나리오 확인",
          "estimatedHours": 9,
          "tags": ["analytics", "dashboard", "visualization"],
          "subtasks": []
        },
        "12": {
          "id": "12",
          "title": "PWA 구현 및 Vercel 배포 설정",
          "description": "오프라인 지원과 프로덕션 배포 구성",
          "status": "pending",
          "priority": "low", 
          "dependencies": ["11"],
          "details": "Service Worker 구현, PWA 매니페스트 설정, IndexedDB 오프라인 저장, Vercel 배포 구성, 환경변수 관리, 성능 최적화. Core Web Vitals 90+ 목표.",
          "testStrategy": "오프라인 모드 완전성 테스트, PWA 설치 확인, 배포 파이프라인 검증, 성능 지표 측정",
          "estimatedHours": 10,
          "tags": ["pwa", "deployment", "vercel"],
          "subtasks": []
        }
      }
    }
  }
}