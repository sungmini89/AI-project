version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: smart-split-calculator
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    volumes:
      - nginx_logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service (for local development)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: smart-split-calculator-dev
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_DEV_MODE=true
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - dev

  # Reverse proxy (optional, for production with SSL)
  proxy:
    image: traefik:v2.10
    container_name: smart-split-proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - app-network
    profiles:
      - proxy

volumes:
  nginx_logs:
    driver: local
  letsencrypt:
    driver: local

networks:
  app-network:
    driver: bridge